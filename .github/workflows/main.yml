name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
        ocaml-version:
          - 4.09.1

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml-version }}
      - run: opam install -y dune core yojson
      - run: opam exec -- dune build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build dir
          path: |
            _build
      - run: zip -j npmingen.zip _build/default/cmd.exe
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./npmingen.zip
          asset_name: npmingen.zip
          asset_content_type: application/zip